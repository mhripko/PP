@model PORTAL.Models.ProjectRequestViewModel
    
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>New Project Request</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ParcelNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ParcelNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ParcelNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ACCELA, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ACCELA, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ACCELA, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NSCROSSSTREETS, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NSCROSSSTREETS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.NSCROSSSTREETS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EWCROSSSTREETS, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EWCROSSSTREETS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EWCROSSSTREETS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DEVELOPER, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DEVELOPER, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DEVELOPER, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DEVELOPERPROJECTNUMBER, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DEVELOPERPROJECTNUMBER, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DEVELOPERPROJECTNUMBER, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ENGINEERINGFIRM, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ENGINEERINGFIRM, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ENGINEERINGFIRM, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CONTRACTOR, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CONTRACTOR, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CONTRACTOR, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
            &nbsp;@Html.ActionLink("Cancel", "Index", "HOME", routeValues: null, htmlAttributes: new { @class = "btn btn-default actionButton actionButtonCancel" })
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
