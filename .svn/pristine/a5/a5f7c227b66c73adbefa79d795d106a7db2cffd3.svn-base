@model PORTAL.Models.PlanReviewRequestViewModel
    
@{
    ViewBag.Title = "Create";
}

<h2>Create and Upload</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Plan Review Request</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ProjectNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProjectName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ProjectName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PDFFILE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PDFFILE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PDFFILE, "", new { @class = "text-danger" })
            <br />
            @(Html.Kendo().Upload()
                .Name("attachments")
                .Async(async => async
                    .Save("Save", "PRREQUEST")
                )
            )
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
            &nbsp;@Html.ActionLink("Cancel", "Index", "HOME", routeValues: null, htmlAttributes: new { @class = "btn btn-default actionButton actionButtonCancel" })
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
