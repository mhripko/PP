@model PORTAL.Models.PartnerCompanyViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>COMPANIES</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.COMPANYID)
    @Html.HiddenFor(model => model.ADDED_BY)
    @Html.HiddenFor(model => model.ADDED_DT)
    @Html.HiddenFor(model => model.UPDATED_BY)
    @Html.HiddenFor(model => model.UPDATED_DT)
    @Html.HiddenFor(model => model.ZIP2)
    @Html.HiddenFor(model => model.IS_ACTIVE)
    @Html.HiddenFor(model => model.CONTACTNAME)
    @Html.HiddenFor(model => model.IS_BPPORTALADMIN)

    <div class="form-group">
        @Html.LabelFor(model => model.COMPANYNAME, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.COMPANYNAME, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @disabled = "true" } })
            @Html.ValidationMessageFor(model => model.COMPANYNAME, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.COMPANYTYPEID, "COMPANYTYPEID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("COMPANYTYPEID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.COMPANYTYPEID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ADDRESS, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ADDRESS, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ADDRESS, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ADDRESS2, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ADDRESS2, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ADDRESS2, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CITY, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.CITY, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CITY, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.STATE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.STATE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.STATE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ZIP, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ZIP, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZIP, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TELEPHONE, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.TELEPHONE, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.TELEPHONE, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EXTENSION, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EXTENSION, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EXTENSION, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FAX, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FAX, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FAX, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EMAIL, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.EMAIL, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.EMAIL, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
            &nbsp;@Html.ActionLink("Cancel", "Index", "HOME", routeValues: null, htmlAttributes: new { @class = "btn btn-default actionButton actionButtonCancel" })
        </div>
    </div>
</div>
}

<div>
    @*@Html.ActionLink("Back to List", "Index")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
